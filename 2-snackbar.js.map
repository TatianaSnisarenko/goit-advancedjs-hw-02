{"version":3,"file":"2-snackbar.js","sources":["../src/js/toast.js","../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst ERROR_COLOR = '#ef4040';\nconst SUCCESS_COLOR = '#59A10D';\nconst TOAST_TIMEOUT = 3000;\nconst TOAST_POSITION = 'topRight';\n\nexport function showToast(type, message, iconPath) {\n  const color = type === 'success' ? SUCCESS_COLOR : ERROR_COLOR;\n  iziToast.show({\n    message,\n    timeout: TOAST_TIMEOUT,\n    iconColor: 'white',\n    messageColor: 'white',\n    position: TOAST_POSITION,\n    close: false,\n    iconUrl: new URL(iconPath, import.meta.url).href,\n    backgroundColor: color,\n  });\n}\n","import '../css/styles.css';\nimport { showToast } from './toast';\n\nconst form = document.querySelector('.form');\n\nconst FULFILLED = 'fulfilled';\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n\n  const delayInput = form.querySelector('input[name=\"delay\"]');\n  const stateInput = form.querySelector('input[name=\"state\"]:checked');\n\n  if (!delayInput.value || !stateInput) {\n    return;\n  }\n\n  const delay = parseInt(delayInput.value, 10);\n  const state = stateInput.value;\n\n  makePromise({ delay, shouldResolve: state === FULFILLED })\n    .then(({ message, iconPath }) => showToast('success', message, iconPath))\n    .catch(({ message, iconPath }) => showToast('error', message, iconPath));\n\n  form.reset();\n}\n\nfunction makePromise({ delay, shouldResolve = true }) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const result = {\n        message: `${\n          shouldResolve ? 'Fulfilled' : 'Rejected'\n        } promise in ${delay}ms`,\n        iconPath: shouldResolve ? '../img/ok-icon.svg' : '../img/fail-icon.svg',\n      };\n      shouldResolve ? resolve(result) : reject(result);\n    }, delay);\n  });\n}\n"],"names":["ERROR_COLOR","SUCCESS_COLOR","TOAST_TIMEOUT","TOAST_POSITION","showToast","type","message","iconPath","color","iziToast","form","FULFILLED","handleSubmit","e","delayInput","stateInput","delay","state","makePromise","shouldResolve","resolve","reject","result"],"mappings":"wIAGA,MAAMA,EAAc,UACdC,EAAgB,UAChBC,EAAgB,IAChBC,EAAiB,WAEhB,SAASC,EAAUC,EAAMC,EAASC,EAAU,CACjD,MAAMC,EAAQH,IAAS,UAAYJ,EAAgBD,EACnDS,EAAS,KAAK,CACZ,QAAAH,EACA,QAASJ,EACT,UAAW,QACX,aAAc,QACd,SAAUC,EACV,MAAO,GACP,QAAS,IAAI,IAAII,EAAU,YAAY,GAAG,EAAE,KAC5C,gBAAiBC,CACrB,CAAG,CACH,CCjBA,MAAME,EAAO,SAAS,cAAc,OAAO,EAErCC,EAAY,YAElBD,EAAK,iBAAiB,SAAUE,CAAY,EAE5C,SAASA,EAAaC,EAAG,CACvBA,EAAE,eAAc,EAEhB,MAAMC,EAAaJ,EAAK,cAAc,qBAAqB,EACrDK,EAAaL,EAAK,cAAc,6BAA6B,EAEnE,GAAI,CAACI,EAAW,OAAS,CAACC,EACxB,OAGF,MAAMC,EAAQ,SAASF,EAAW,MAAO,EAAE,EACrCG,EAAQF,EAAW,MAEzBG,EAAY,CAAE,MAAAF,EAAO,cAAeC,IAAUN,CAAS,CAAE,EACtD,KAAK,CAAC,CAAE,QAAAL,EAAS,SAAAC,CAAQ,IAAOH,EAAU,UAAWE,EAASC,CAAQ,CAAC,EACvE,MAAM,CAAC,CAAE,QAAAD,EAAS,SAAAC,CAAU,IAAKH,EAAU,QAASE,EAASC,CAAQ,CAAC,EAEzEG,EAAK,MAAK,CACZ,CAEA,SAASQ,EAAY,CAAE,MAAAF,EAAO,cAAAG,EAAgB,EAAI,EAAI,CACpD,OAAO,IAAI,QAAQ,CAACC,EAASC,IAAW,CACtC,WAAW,IAAM,CACf,MAAMC,EAAS,CACb,QAAS,GACPH,EAAgB,YAAc,UACxC,eAAuBH,CAAK,KACpB,SAAUG,EAAgB,qBAAuB,sBACzD,EACMA,EAAgBC,EAAQE,CAAM,EAAID,EAAOC,CAAM,CAChD,EAAEN,CAAK,CACZ,CAAG,CACH"}